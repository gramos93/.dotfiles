[[language]]
name = "rust"
language-servers = ["rust-analyzer" ]
formatter = { command = "rustfmt" }
auto-format = true
indent = { tab-width = 4, unit = "    " }

[language-server.rust-analyzer]
command = "rust-analyzer"

[[language]]
name = "html"
language-servers = ["typescript-language-server"]
formatter = { command = 'prettier', args = ["--parser", "html"] }
auto-format = true

[[language]]
name = "json"
language-servers = ["typescript-language-server"]
formatter = { command = 'prettier', args = ["--parser", "json"] }
auto-format = true

[[language]]
name = "css"
language-servers = ["typescript-language-server"]
formatter = { command = 'prettier', args = ["--parser", "css"] }
auto-format = true

[[language]]
name = "javascript"
language-servers = ["typescript-language-server"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "typescript"
language-servers = ["typescript-language-server"]
formatter = {command = 'prettier', args = ["--parser", 'typescript']}
auto-format = true

[[language]]
name = "tsx"
language-servers = ["typescript-language-server"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "yaml"
formatter = { command = 'prettier', args = ["--parser", "yaml"] }
auto-format = true

[[language]]
name = "python"
scope = "score.python"
auto-format = true
injection-regex = "python"
file-types = ["py", "pyi", "py3", "pyw", "ptl", "pyx"]
comment-token = "#"
indent = {tab-width = 4, unit = "    "}
roots = ["pyproject.toml", "setup.py", "poetry.lock", "pyrightconfig.json", "requirements.txt", ".venv/"]
language-servers = [ "pyright", "ruff" ]

[language-server.ruff]
command = "ruff"
args = ["server"]

[language-server.ruff.config.settings]
logLevel = "debug"

[language-server.pyright]
command = "pyright-langserver"
args = ["--stdio"]

[language-server.pyright.config]
python.analysis.venvPath = "."
python.analysis.venv = ".venv"
python.analysis.lint = true
python.analysis.inlayHint.enable = true
python.analysis.autoSearchPaths = true
python.analysis.diagnosticMode = "workspace"
python.analysis.useLibraryCodeForType = true
python.analysis.logLevel = "Error"
python.analysis.typeCheckingMode = "basic"
python.analysis.autoImportCompletion = true
python.analysis.reportOptionalSubscript = false
python.analysis.reportOptionalMemberAccess = false

[language.formatter]
command = "ruff"
args = ["format", "--quiet", "-"]

[language-server.zls]
command = "zls"

[[language]]
name = "c"
auto-format = true
file-types = ["c", "h"]
formatter = { command = 'clang-format', args= ["--style", "{BasedOnStyle: Google, IndentWidth: 4}"]}
language-servers = ["clangd"]
indent = { tab-width = 4, unit = "    " }

[[language]]
name = "cpp"
auto-format = true
file-types = ["cpp", "cc", "cxx", "hpp", "hcc", "hxx"]
formatter = { command = 'clang-format', args= ["--style", "{BasedOnStyle: Google, IndentWidth: 4}"]}
language-servers = ["clangd"]
indent = { tab-width = 4, unit = "    " }

[language-server.clangd.config]
clangd.fallbackFlags = "-std=c++20 -std=c99"

[[language]]
name = "zig"
auto-format = true
language-servers = ["zls"]
indent = {tab-width = 4, unit = "    "}
